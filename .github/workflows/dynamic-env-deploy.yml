name: Dynamic env deploy

on:
  push:
    branches:
      - main
      - develop
      - 'feature/*'

jobs:
  dynamic-env-deploy:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Wait for status checks
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          STATUS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${COMMIT_SHA}/status")
          while [[ "$(echo $STATUS | jq -r '.state')" != "success" ]]; do
            echo "Waiting for status checks to pass..."
            sleep 10
            STATUS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/commits/${COMMIT_SHA}/status")
          done

      - name: Install jq
        run: sudo apt-get install jq

      - name: Set Environment
        id: set-environment
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "environment=production" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            echo "environment=staging" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == refs/heads/feature/* ]]; then
            echo "environment=feature" >> $GITHUB_ENV
          fi
          echo "environment=${{ env.environment }}"
        
  deploy:
    runs-on: ubuntu-latest
    needs: dynamic-env-deploy  # Corrected 'needs' to point to the correct job
    environment:
      name: ${{ needs.dynamic-env-deploy.outputs.environment }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Deploy to Environment
        run: |
          if [[ "${{ needs.dynamic-env-deploy.outputs.environment }}" == "production" ]]; then
            echo "Deploying to production environment"
          elif [[ "${{ needs.dynamic-env-deploy.outputs.environment }}" == "staging" ]]; then
            echo "Deploying to staging environment"
          elif [[ "${{ needs.dynamic-env-deploy.outputs.environment }}" == "feature" ]]; then
            echo "Deploying to feature environment"
          fi
	  
